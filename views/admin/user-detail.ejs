<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Detail - <%= user.username %></title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      max-width: 1000px;
      margin: 0 auto;
    }

    .nav-links {
      background: white;
      padding: 20px 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    .nav-links a {
      color: #667eea;
      text-decoration: none;
      margin-right: 20px;
      font-weight: 500;
    }

    .nav-links a:hover {
      text-decoration: underline;
    }

    .user-card {
      background: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      margin-bottom: 20px;
    }

    .user-header {
      display: flex;
      align-items: center;
      gap: 20px;
      margin-bottom: 30px;
      padding-bottom: 20px;
      border-bottom: 2px solid #f0f0f0;
    }

    .user-avatar {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      object-fit: cover;
      border: 3px solid #667eea;
    }

    .user-avatar-placeholder {
      width: 100px;
      height: 100px;
      border-radius: 50%;
      background: #667eea;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 40px;
      color: white;
      font-weight: bold;
    }

    .user-info h2 {
      color: #333;
      margin-bottom: 5px;
    }

    .role-badge {
      padding: 5px 15px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: bold;
      display: inline-block;
      margin-top: 10px;
    }

    .role-super-admin { background: #dc3545; color: white; }
    .role-admin { background: #ffc107; color: #333; }
    .role-manager { background: #17a2b8; color: white; }
    .role-doctor { background: #28a745; color: white; }
    .role-staff { background: #6c757d; color: white; }
    .role-patient { background: #007bff; color: white; }

    .status-badge {
      padding: 5px 15px;
      border-radius: 20px;
      font-size: 14px;
      font-weight: bold;
      display: inline-block;
      margin-left: 10px;
    }

    .status-active { background: #d4edda; color: #155724; }
    .status-inactive { background: #f8d7da; color: #721c24; }

    .details-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .detail-item {
      padding: 15px;
      background: #f8f9fa;
      border-radius: 8px;
    }

    .detail-item label {
      display: block;
      color: #666;
      font-size: 12px;
      text-transform: uppercase;
      margin-bottom: 5px;
    }

    .detail-item .value {
      color: #333;
      font-size: 16px;
      font-weight: 500;
    }

    .actions {
      display: flex;
      gap: 15px;
      flex-wrap: wrap;
    }

    .btn {
      padding: 12px 24px;
      border: none;
      border-radius: 5px;
      font-size: 14px;
      font-weight: bold;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
    }

    .btn-primary { background: #667eea; color: white; }
    .btn-success { background: #28a745; color: white; }
    .btn-warning { background: #ffc107; color: #333; }
    .btn-danger { background: #dc3545; color: white; }
    .btn-secondary { background: #6c757d; color: white; }

    .btn:hover {
      opacity: 0.8;
    }

    select {
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      font-size: 14px;
      margin-right: 10px;
    }

    .message {
      padding: 15px;
      border-radius: 5px;
      margin-bottom: 20px;
    }

    .message.success {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
    }

    .message.error {
      background: #f8d7da;
      color: #721c24;
      border: 1px solid #f5c6cb;
    }

    .message.hidden {
      display: none;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="nav-links">
      <a href="/admin/dashboard">üìä Dashboard</a>
      <a href="/admin/users">üë• User Management</a>
      <a href="/medications">üíä Medications</a>
      <a href="/logout">üö™ Logout</a>
    </div>

    <div class="user-card">
      <div id="message" class="message hidden"></div>

      <div class="user-header">
        <div>
          <% if (user.avatar) { %>
            <img src="<%= user.avatar %>" alt="Avatar" class="user-avatar">
          <% } else { %>
            <div class="user-avatar-placeholder">
              <%= user.username.charAt(0).toUpperCase() %>
            </div>
          <% } %>
        </div>
        
        <div class="user-info">
          <h2><%= user.username %></h2>
          <span class="role-badge role-<%= user.role.toLowerCase().replace('_', '-') %>">
            <%= roleDescriptions[user.role].name %>
          </span>
          <span class="status-badge <%= user.isActive ? 'status-active' : 'status-inactive' %>">
            <%= user.isActive ? 'Active' : 'Inactive' %>
          </span>
        </div>
      </div>

      <div class="details-grid">
        <div class="detail-item">
          <label>Email</label>
          <div class="value"><%= user.email %></div>
        </div>

        <div class="detail-item">
          <label>Full Name</label>
          <div class="value"><%= user.fullName || '-' %></div>
        </div>

        <div class="detail-item">
          <label>Phone</label>
          <div class="value"><%= user.phone || '-' %></div>
        </div>

        <div class="detail-item">
          <label>Date of Birth</label>
          <div class="value">
            <%= user.dateOfBirth ? new Date(user.dateOfBirth).toLocaleDateString('vi-VN') : '-' %>
          </div>
        </div>

        <div class="detail-item">
          <label>Gender</label>
          <div class="value"><%= user.gender || '-' %></div>
        </div>

        <div class="detail-item">
          <label>Created At</label>
          <div class="value"><%= new Date(user.createdAt).toLocaleString('vi-VN') %></div>
        </div>
      </div>

      <% if (user.address) { %>
        <div class="detail-item" style="margin-bottom: 30px;">
          <label>Address</label>
          <div class="value"><%= user.address %></div>
        </div>
      <% } %>

      <% if (canManage) { %>
        <div class="actions">
          <div style="display: flex; align-items: center; gap: 10px;">
            <select id="roleSelect" onchange="updateRole()">
              <% Object.values(roles).forEach(role => { %>
                <option value="<%= role %>" <%= user.role === role ? 'selected' : '' %>>
                  <%= roleDescriptions[role].name %>
                </option>
              <% }); %>
            </select>
            <button class="btn btn-primary" onclick="updateRole()">Update Role</button>
          </div>

          <button class="btn <%= user.isActive ? 'btn-warning' : 'btn-success' %>" onclick="toggleStatus()">
            <%= user.isActive ? 'üö´ Deactivate' : '‚úÖ Activate' %>
          </button>

          <% if (user.role !== 'SUPER_ADMIN') { %>
            <button class="btn btn-danger" onclick="deleteUser()">üóëÔ∏è Delete User</button>
          <% } %>
        </div>
      <% } else { %>
        <p style="color: #999; font-style: italic;">
          You cannot manage this user (equal or higher role).
        </p>
      <% } %>
    </div>
  </div>

  <script>
    const userId = '<%= user._id %>';
    const messageDiv = document.getElementById('message');

    function showMessage(text, type) {
      messageDiv.textContent = text;
      messageDiv.className = `message ${type}`;
      setTimeout(() => {
        messageDiv.className = 'message hidden';
      }, 5000);
    }

    async function updateRole() {
      const role = document.getElementById('roleSelect').value;
      
      try {
        const res = await fetch(`/admin/users/${userId}/role`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ role })
        });
        
        const data = await res.json();
        
        if (data.success) {
          showMessage(data.message, 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(data.message, 'error');
        }
      } catch (err) {
        showMessage('Error updating role', 'error');
      }
    }

    async function toggleStatus() {
      try {
        const res = await fetch(`/admin/users/${userId}/toggle-status`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        
        const data = await res.json();
        
        if (data.success) {
          showMessage(data.message, 'success');
          setTimeout(() => location.reload(), 1000);
        } else {
          showMessage(data.message, 'error');
        }
      } catch (err) {
        showMessage('Error updating status', 'error');
      }
    }

    async function deleteUser() {
      if (!confirm('Are you sure you want to delete this user?')) {
        return;
      }
      
      try {
        const res = await fetch(`/admin/users/${userId}/delete`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        
        const data = await res.json();
        
        if (data.success) {
          showMessage(data.message, 'success');
          setTimeout(() => {
            window.location.href = '/admin/users';
          }, 1000);
        } else {
          showMessage(data.message, 'error');
        }
      } catch (err) {
        showMessage('Error deleting user', 'error');
      }
    }
  </script>
</body>
</html>
